name: cBuild

# Build on every branch push, tag push, and pull request change:
#on: [push]
# Alternatively, to publish when a (published) GitHub Release is created, use the following:
on:
  push:
    branches:
      - main
      - develop

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - {os: macos-latest, arch: x86_64, build: "*"}
          - {os: macos-latest, arch: arm64, build: "*"}
          - {os: windows-latest, arch: AMD64, build: "*"}
          - {os: windows-latest, arch: x86, build: "*"}          
          - {os: ubuntu-latest, arch: x86_64, build: "*"}
          - {os: ubuntu-latest, arch: aarch64, build: "*-manylinux*"}
          - {os: ubuntu-latest, arch: ppc64le, build: "*-manylinux*"}
          - {os: ubuntu-latest, arch: s390x, build: "*-manylinux*"}
          - {os: ubuntu-latest, arch: x86_64, build: "*-manylinux*"}
          - {os: ubuntu-latest, arch: i686, build: "*-manylinux*"}
          - {os: ubuntu-latest, arch: aarch64, build: "*-musllinux*"}
          - {os: ubuntu-latest, arch: ppc64le, build: "*-musllinux*"}
          - {os: ubuntu-latest, arch: s390x, build: "*-musllinux*"}
          - {os: ubuntu-latest, arch: x86_64, build: "*-musllinux*"}
          - {os: ubuntu-latest, arch: i686, build: "*-musllinux*"}

    steps:
      - uses: actions/checkout@v4

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.19.1
        env:
          # Disable building PyPy wheels on all platforms
          CIBW_SKIP: pp*
          CIBW_ARCHS: ${{ matrix.arch }}
          CIBW_BUILD: ${{ matrix.build }}

      - uses: actions/upload-artifact@v4
        with:
          name: cibw-wheels-${{ matrix.os }}-${{ strategy.job-index }}
          path: ./wheelhouse/*.whl

  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Build sdist
        run: pipx run build --sdist

      - uses: actions/upload-artifact@v4
        with:
          name: cibw-sdist
          path: dist/*.tar.gz

  upload_pypi:
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest
    environment: pypi
    permissions:
      id-token: write
    # or, alternatively, upload to PyPI on every tag starting with 'v' (remove on: release above to use this)
    # if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    steps:
      - uses: actions/download-artifact@v4
        with:
          # unpacks all CIBW artifacts into dist/
          pattern: cibw-*
          path: dist
          merge-multiple: true

      - uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.test_pypi_password }}
          repository_url: https://test.pypi.org/legacy/
          skip-existing: true