name: cBuild

# Build on every branch push, tag push, and pull request change:
#on: [push]
# Alternatively, to publish when a (published) GitHub Release is created, use the following:
on:
  push:
    branches:
      - main
      - develop

jobs:
  build_wheels:
    name: Build wheel for ${{ matrix.os }}-${{ matrix.cibw_python }}-${{ matrix.cibw_arch }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-14, macos-15, macos-26, windows-latest]
        cibw_python: [cp39, cp310, cp311, cp312, cp313, cp314]
        cibw_arch:
          - x86_64
          - arm64
          - AMD64
          - x86
        exclude:
          # Linux only supports x86_64
          - os: ubuntu-latest
            cibw_arch: arm64
          - os: ubuntu-latest
            cibw_arch: x86
          - os: ubuntu-latest
            cibw_arch: AMD64

          # macOS ARM64 only valid for 14–26
          - os: macos-14
            cibw_arch: AMD64
          - os: macos-14
            cibw_arch: x86
          - os: macos-15
            cibw_arch: AMD64
          - os: macos-15
            cibw_arch: x86
          - os: macos-26
            cibw_arch: AMD64
          - os: macos-26
            cibw_arch: x86

          # macOS x86_64 only valid for Intel macs
          - os: macos-26
            cibw_arch: arm64  # keep if ARM-only runner
          # Windows doesn’t support arm64 and x86_64
          - os: windows-latest
            cibw_arch: arm64
          - os: windows-latest
            cibw_arch: x86_64

    steps:
      - uses: actions/checkout@v5

      - name: Build wheels
        uses: pypa/cibuildwheel@v3.2.1
        env:
          CIBW_BUILD: ${{ matrix.cibw_python }}-*
          CIBW_ARCHS: ${{ matrix.cibw_arch }}
          CIBW_SKIP: pp*

      - uses: actions/upload-artifact@v4
        with:
          name: cibw-wheel-${{ matrix.os }}-${{ matrix.cibw_python }}-${{ matrix.cibw_arch }}
          path: ./wheelhouse/*.whl

  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5

      - name: Build sdist
        run: pipx run build --sdist

      - uses: actions/upload-artifact@v4
        with:
          name: cibw-sdist
          path: dist/*.tar.gz

  upload_pypi:
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest
    permissions:
      id-token: write
    # or, alternatively, upload to PyPI on every tag starting with 'v' (remove on: release above to use this)
    # if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    steps:
      - uses: actions/download-artifact@v4
        with:
          # unpacks all CIBW artifacts into dist/
          pattern: cibw-*
          path: dist
          merge-multiple: true
      - uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/
          skip-existing: true